[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/reportWebVitals.js":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/VoyagesSplashPage.jsx":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/GetVoyages/EditForm.jsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyageForm/stayAndFood/stayFoodDisplay/FoodDisplay.jsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/auth/Auth.jsx":"5"},{"size":362,"mtime":1606330097993,"results":"6","hashOfConfig":"7"},{"size":941,"mtime":1606938569478,"results":"8","hashOfConfig":"7"},{"size":4059,"mtime":1606938569475,"results":"9","hashOfConfig":"7"},{"size":1565,"mtime":1606938569477,"results":"10","hashOfConfig":"7"},{"size":3061,"mtime":1606958766373,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njp1v4",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/reportWebVitals.js",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/VoyagesSplashPage.jsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/GetVoyages/EditForm.jsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyageForm/stayAndFood/stayFoodDisplay/FoodDisplay.jsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Voyage-Client-1/voyage-client/src/components/auth/Auth.jsx",["23"],"import { useState } from \"react\";\nimport \"./style.css\";\nimport logo from '../../assets/logo.png'\n\nconst Auth = (props) => {\n  console.log(props)\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(\"true\");\n\n  const handleSubmit = (event) => {\n    // stops browser from refreshing when form is submitted\n    event.preventDefault();\n    // sets up value of the url depending on if logging in or signing up\n    const url = login ? \"http://localhost:3050/user/login\" : \"http://localhost:3050/user/register\";\n    // sets up value of the data we are going to send to the enpoint of the url nased on login value\n    const bodyObj = login\n      ? {\n          email: email,\n          password: password,\n        }\n      : {\n        user:{\n\n          userName: userName,\n          email: email,\n          password: password,\n        }\n        };\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(bodyObj),\n    })\n      .then((res) => res.json())\n                    //**** CHANGED TO TERNARY TO SET TOKEN!!!! */\n      .then((data) => login ? props.updateToken(data.token) : undefined);\n  };\n\n  const title = () => {\n    return login ? \"Login\" : \"Signup\";\n    // if login is true, return string of 'Login'. Else, return 'Signup';\n  };\n\n  const loginToggle = (event) => {\n    event.preventDefault();\n    setLogin(!login); // => set login to be the opposite of it's current value\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const signupFields = () => {\n    return !login ? (\n      <div className=\"loginForm\">\n        <label htmlFor=\"userName\">Username</label>\n        <br />\n        <input type=\"text\" id=\"userName\" value={userName} onChange={(event) => setUserName(event.target.value)} />\n      </div>\n    ) : null;\n  };\nfunction signUp() {\n  alert('User registered!')\n}\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-img\">\n          <img className=\"element\" src={logo} alt=\"voyage-logo\" />\n        <h1>{title()}</h1>\n        {signupFields()}\n        <label htmlFor=\"email\">Email:</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"email\"\n          // two-way data binding. This builds a closed circuit to display\n          value={email}\n          placeholder=\"Email\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n        <br />\n        <label htmlFor=\"password\">Password:</label>\n        <br />\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n        <br />\n        <button onClick={loginToggle}>Sign up</button>\n   \n        <br />\n        <button type=\"submit\">Login</button>\n        </div>\n      </form>\n\n    </div>\n  );\n};\n\nexport default Auth;\n",{"ruleId":"24","severity":1,"message":"25","line":67,"column":10,"nodeType":"26","messageId":"27","endLine":67,"endColumn":16},"no-unused-vars","'signUp' is defined but never used.","Identifier","unusedVar"]