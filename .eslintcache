[{"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/index.js":"1","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/GetVoyages/Voyage/Voyage.jsx":"2","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/EditVoyages/EditVoyagesForm/EditVoyagesForm.jsx":"3","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/EditVoyages/EditVoyages.jsx":"4","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/auth/Auth.jsx":"5","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/App.js":"6","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/reportWebVitals.js":"7","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyage.jsx":"8","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/GetVoyages/AllVoyages.jsx":"9","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyageForm/PostForm.jsx":"10","/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/VoyagesSplashPage.jsx":"11"},{"size":500,"mtime":1606329091397,"results":"12","hashOfConfig":"13"},{"size":631,"mtime":1606618185014,"results":"14","hashOfConfig":"13"},{"size":4877,"mtime":1606584276817,"results":"15","hashOfConfig":"13"},{"size":1788,"mtime":1606584276817,"results":"16","hashOfConfig":"13"},{"size":2914,"mtime":1606708857807,"results":"17","hashOfConfig":"13"},{"size":954,"mtime":1606615317179,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1606329091398,"results":"19","hashOfConfig":"13"},{"size":753,"mtime":1606617496542,"results":"20","hashOfConfig":"13"},{"size":911,"mtime":1606750159611,"results":"21","hashOfConfig":"13"},{"size":4309,"mtime":1606750195331,"results":"22","hashOfConfig":"13"},{"size":481,"mtime":1606760501797,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"gvu0gu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/index.js",[],["54","55"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/GetVoyages/Voyage/Voyage.jsx",[],["56","57"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/EditVoyages/EditVoyagesForm/EditVoyagesForm.jsx",["58"],"import React, {useState} from 'react';\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from 'reactstrap';\n\nconst VoyageEdit = (props) => {\n    const [editLocation, setEditLocation] = useState(props.voyageToUpdate.location);\n    const [editSeason, setEditSeason] = useState(props.voyageToUpdate.season);\n    const [editStay, setEditStay] = useState(props.voyageToUpdate.stay);\n    const [editFood, setEditFood] = useState(props.voyageToUpdate.food);\n    const [editRating, setEditRating] = useState(props.voyageToUpdate.rating);\n\n    const voyageUpdate = (event, voyage) => {\n        event.preventDefault();\n        fetch(`http://localhost:3050/voyage/${props.voyageToUpdate.id}`, {\n            method: 'PUT',\n            body: JSON.stringify({location: editLocation, season: editSeason, stay: editStay, food: editFood, rating: editRating}),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        }) .then((res => {\n            props.fetchVoyages();\n            props.updateOff();\n        }))\n    }\n\n    return (\n        <Modal isOpen={true}>\n            <ModalHeader>Post a Voyage</ModalHeader>\n            <ModalBody>\n                <Form onSubmit={voyageUpdate}>\n                    <FormGroup>\n                        <Label htmlFor='location'>Edit Location:</Label>\n                        <Input name='location' value={editLocation} onChange={(e) => setEditLocation(e.target.value)} />\n                    </FormGroup>    \n                    <FormGroup>\n                        <Label htmlFor='season'>Edit Season:</Label>\n                        <Input name='season' value={editSeason} onChange={(e) => setEditSeason(e.target.value)}>\n                        <option></option>\n                        <option value='Summer'>Summer</option>\n                        <option value='Fall'>Fall</option>\n                        <option value='winter'>Winter</option>\n                        <option value='Spring'>Spring</option>\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='stay'>Edit Stay:</Label>\n                        <Input name='stay' value={editStay} onChange={(e) => setEditStay(e.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='food'>Edit Food:</Label>\n                        <Input name='food' value={editFood} onChange={(e) => setEditFood(e.target.value)} />\n                    </FormGroup>\n                    <FormGroup tag='fieldset'>\n                    <legend>Rating</legend>\n                    <FormGroup>\n                        <Label htmlFor='rating'>\n                            <Input type='radio' name='rating' value={1} onChange={(e)=>setEditRating(e.target.value)} />\n                            1\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='rating'>\n                            <Input type='radio' name='rating' value={2} onChange={(e)=>setEditRating(e.target.value)} />\n                            2\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='rating'>\n                            <Input type='radio' name='rating' value={3} onChange={(e)=>setEditRating(e.target.value)} />\n                            3\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='rating'>\n                            <Input type='radio' name='rating' value={4} onChange={(e)=>setEditRating(e.target.value)} />\n                            4\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor='rating'>\n                            <Input type='radio' name='rating' value={5} onChange={(e)=>setEditRating(e.target.value)} />\n                            5\n                        </Label>\n                    </FormGroup>\n                </FormGroup>\n                <Button type='submit'>Update the voyage!</Button>\n                </Form>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nexport default VoyageEdit;\n\n\n// const Edit = () => {\n\n//     const testData = [\n//         {\n//             location: \"Ohio\",\n//             season: \"Fall\",\n//             stay: \"AirBnb\",\n//             food: \"Ice Cream\",\n//             rating: 1\n//         },\n//         {\n//             location: \"Tennessee\",\n//             season: \"Spring\",\n//             stay: \"Marriott\",\n//             food: \"BBQ\",\n//             rating: 2\n//         }\n//     ]\n\n//     return (\n//         <div>\n\n//         </div>\n//     )\n// }",["59","60"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/EditVoyages/EditVoyages.jsx",["61","62","63","64","65","66"],"import React, {useState, useEffect} from 'react';\nimport {Container, Row, Col} from 'reactstrap';\nimport EditVoyagesForm from './EditVoyagesForm/EditVoyagesForm';\nimport PostVoyage from '../PostVoyages/PostVoyage';\nimport AllVoyages from '../GetVoyages/AllVoyages';\n\nconst EditVoyage = (props) => {\n    const [voyages, setVoyages] = useState([]);\n    const [updateActive, setUpdateActive] = useState(false);\n    const [voyageToUpdate, setVoyageToUpdate] = useState([]);\n\n    const fetchVoyages = () => {\n        fetch('http://localhost:3050/voyage', {\n            method: 'GET',\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        }) .then((res) => res.json())\n        .then((logData) => {\n            setVoyages(logData)\n        })\n    }\n\n    const editUpdateVoyage = (voyage) => {\n        setVoyageToUpdate(voyage);\n        console.log(voyage);\n    }\n\n    const updateOn = () => {\n        setUpdateActive(true);\n    }\n\n    const updateOff = () => {\n        setUpdateActive(false);\n    }\n\n    useEffect(() => {\n        fetchVoyages();\n    }, [])\n\n    return(\n        <Container>\n            <Row>\n                <Col md=\"3\">\n                    <PostVoyage fetchVoyages={fetchVoyages} token={props.token}/>\n                </Col>\n                <Col md=\"9\">\n                    <AllVoyages voyages={voyages} editUpdateVoyage={editUpdateVoyage} updateOn={updateOn} fetchVoyages={fetchVoyages}\n                    token={props.token}/>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n//     return (\n//         <div>\n//             <button>Edit Voyage Form</button>\n//             <EditVoyagesForm />\n//         </div>\n//     )\n// }\n\nexport default EditVoyage;",["67","68"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/auth/Auth.jsx",[],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/App.js",[],["69","70"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/reportWebVitals.js",[],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyage.jsx",[],["71","72"],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/GetVoyages/AllVoyages.jsx",[],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/PostVoyages/PostVoyageForm/PostForm.jsx",[],"/Users/jakemaz/Desktop/blueBadge/voyage/voyage-client/src/components/voyage/Voyages/VoyagesSplashPage.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":9,"nodeType":"81","messageId":"82","endLine":20,"endColumn":17,"fix":"83"},{"ruleId":"73","replacedBy":"84"},{"ruleId":"75","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"90","line":9,"column":12,"nodeType":"88","messageId":"89","endLine":9,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":10,"column":12,"nodeType":"88","messageId":"89","endLine":10,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":13,"column":9,"nodeType":"81","messageId":"82","endLine":19,"endColumn":17,"fix":"92"},{"ruleId":"86","severity":1,"message":"93","line":34,"column":11,"nodeType":"88","messageId":"89","endLine":34,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":40,"column":8,"nodeType":"96","endLine":40,"endColumn":10,"suggestions":"97"},{"ruleId":"73","replacedBy":"98"},{"ruleId":"75","replacedBy":"99"},{"ruleId":"73","replacedBy":"100"},{"ruleId":"75","replacedBy":"101"},{"ruleId":"73","replacedBy":"102"},{"ruleId":"75","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"106","text":"107"},["104"],["105"],"no-unused-vars","'EditVoyagesForm' is defined but never used.","Identifier","unusedVar","'updateActive' is assigned a value but never used.","'voyageToUpdate' is assigned a value but never used.",{"range":"108","text":"107"},"'updateOff' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchVoyages'. Either include it or remove the dependency array.","ArrayExpression",["109"],["104"],["105"],["104"],["105"],["104"],["105"],"no-global-assign","no-unsafe-negation",[1028,1030],".",[737,739],{"desc":"110","fix":"111"},"Update the dependencies array to be: [fetchVoyages]",{"range":"112","text":"113"},[1147,1149],"[fetchVoyages]"]